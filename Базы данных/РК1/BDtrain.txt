--Билет 6
--1)Найти все пары вида <дата_нарушения, ФИО водителя>
SQL:
select F.FineDate, D.FIO
from Fines F join Drivers D on F.DriverID = D.DriverID

РА:
(Fines join Drivers)[FineDate, FIO]

ИК:
range of Dx is Drivers
range of Fx is Fines
(Fx.FineDate, Dx.FIO) where Fx.DriverId = Dx.DriverID

--2)Найти все автомабили, водители которых не получили ни одного штрафа
SQL:
--Мой вариант
select *
from rk1.cars C
where CarID in (select carid
				from rk1.DriversCars DC
				where not exists (select *
								  from rk1.Fines F
								  where DC.DriverID = F.DriverID))
--Илья
select distinct CarID 
from rk1.DriversCars DC
where not exists (select *
				  from rk1.Fines F
				  where DC.DriverID = F.DriverID)
								  
РА:
((Cars join DriversCars) join (Drivers[DriversID] minus (summarize Fines per Fines{DriverID})[DriverID]))[CarID, Model] --верно

ИК:
range of Cx is Cars
range of DCx is DriversCars
range of Fx is Fines
(Cx.CarID, Cx.Model) where exists DCx ((Cx.CarID = DCx.CarID) and not exists Fx (Fx.DriverID = DCx.DriverID))

range of DCx is DriversCars
range of Fx is Fines
(DCx.CarID) where not exists Fx(Fx.DID = DCx.DID) --Не получается disctinct (будут дубли)

--3)Найти год (FineDate?), в котором было выписано наибольшее количество штрафов
SQL:
with datesCnts (FineDate, cnt) as
(
	select FineDate, count(FineID) as cnt
	from rk1.Fines
	group by FineDate
)
select FineDate
from datesCnts
where cnt = (select max(cnt)
			 from datesCnts)

РА:
((summarize Fines per Fines{FineDate} add count as cnt) where cnt = max(cnt))[FineDate]

ИК:
--???????????????????????????????
range of Fx is Fines
range of Fy is Fines.FineDate
range of Fcnt is Fy.FineDate, count(Fx where Fx.FineType = Fy.FineType) as cnt
Fcnt.FineDate where Fcnt.cnt = max(Fcnt.cnt)

Fcnt.FineDate where Fcnt.cnt = max(Fcnt, cnt)--Верно?

--Билет 1
--1)Найти все пары вида <ФИО водителя, модель автомобиля>
SQL:
select DDC.FIO, C.Model
from (rk1.Drivers D join rk1.DriversCars DC on D.DriverID = DC.DriverID) as DDC join rk1.Cars C on DDC.CarId = C.CarID

РА:
((Drivers join DriversCars) join Cars)[FIO, Model]

ИК:
range of Dx is Drivers
range of DCx is DriversCars
range of Cx is Cars
(Dx.FIO, Cx.Model) where (Dx.DriverID = DCx.DriverID AND Dx.DriverID = DCx.DriverID)--низя????
(Dx.FIO, Cx.Model) where exists DCx(Dx.DriverID = DCx.DriverID AND Cx.CarID = DCx.CarID) 

--2)Найти все штрафы водителей, автомобили которых были зарегестрированы в 2020 году
SQL:
select *
from rk1.Fines F
where F.DriverID in (select DriverID
					 from rk1.DriversCars DC join rk1.Cars C on DC.CarID = C.CarID
					 where C.Year = 2020)

РА:
((Fines join DriversCars) join (Cars where Cars.Year = 2020))[FineID]


ИК:
range of Fx is Fines
range of DCx is DriversCars
range of Cx is Cars where Year = 2020
Fx.FineID where exists DCx(Fx.DriverID = DCx.DriverID AND exists Cx(DCx.CarID = Cx.CarID) )


--3)Вычислить общую сумму штрафов водителей в 2019 году
SQL:
select sum(amount) as total
from rk1.Fines
where FineDate like '2019%' 

РА:
(SUMMARIZE Fines PER Fines{FineDate} ADD SUM(amount) as total) where Fines.FineDate = "2019" --Первый вариант

EXTEND Fines ADD '1' AS sameCol -- расширение (не нужна)
SUMMARIZE (EXTEND ((SUMMARIZE Fines PER Fines{FineDate} ADD SUM(amount) as datetotal) where Fines.FineDate like '2019%') ADD '1' AS sameCol) as DA PER DA{sameCol} ADD SUM(datetotal) as yeartotal --Хуета


ИК: 
range of Fx is Fines where FineDate like '2019%'
sum(Fx.Amount)


--Билет 8
--1) Найти все тройки вида 

--2) Найти водителей, владеющих хотя бы одной машиной красного цвета
SQL:
select *
from rk1.Drivers D
where DriverID in (select DC.DriverID
				   from rk1.DriversCars DC
				   where CarID in (select CarID
								   from rk1.Cars C
								   where C.Color = 'red'))
								   
РА:
((DriversCars join Drivers) join (Cars where Color = 'red'))[DriverID] --с повторами

SUMMARIZE ((DriversCars join Drivers) join (Cars where Color = 'red')) PER DriversCars{DriverID} --без повторов


ИК:
range of Cx is Cars where Color = 'red'
range of Dx is Drivers
range of DCx is DriversCars
(Dx.DriverID) where exists DCx(Dx.DriverID = DCx.DriverID and exists Cx(DCx.CarID = Cx.CarID and Cx.Color = 'red'))

--3) Найти машины, которыми владеют более 2ух водителей
SQL:
--Мой вариант
with DriversCount (CarID, cnt) as
(
	select CarID, count(DriverID) as cnt
	from rk1.DriversCars DC
	group by CarID
)
select CarID
from DriversCount
where cnt > 2

--Чужой вариант
select CarID
from rk1.DriversCars DC
group by CarID
having count(*) >2

РА:
((SUMMARIZE DriversCars PER DriversCars{CarID} ADD COUNT AS cnt) where CNT > 2)[CarID]

ИК:
--Верно ли?
range of DCx is DriveresCars
range of Cx is Cars
Cx.CarID where count (DCx where DCX.CarID = Cx.CarID) > 2 --Я ДУМАЮ ЧТО ЭТО ВЕРНО НА 99.(9)%